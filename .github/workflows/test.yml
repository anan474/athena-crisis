name: test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  action:
    timeout-minutes: 20
    permissions:
      contents: read
      deployments: write
    strategy:
      matrix:
        node-version: [22]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Use Git Bash
        if: matrix.os == 'windows-latest'
        run: npm config set script-shell "C:\\Program Files\\git\\bin\\bash.exe"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        id: pnpm-install
        with:
          version: 9.*
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-store-

      - name: Cache Playwright Browsers
        id: cache-playwright-browsers
        uses: actions/cache@v3
        with:
          path: ~/.cache/ms-playwright
          key: playwright-browsers-${{ hashFiles('**/pnpm-lock.yaml') }}

      - name: Run setup
        run: pnpm install && pnpm dev:setup

      - name: Setup Playwright
        if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
        run: pnpx playwright install --with-deps chromium

      - name: Run tests
        if: matrix.os != 'windows-latest'
        run: pnpm test:ci

      - name: Run tests (Windows)
        if: matrix.os == 'windows-latest'
        run: pnpm vitest:run-ci
